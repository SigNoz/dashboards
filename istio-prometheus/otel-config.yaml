mode: deployment
config:
  receivers:
    prometheus:
      config:
        scrape_configs:
          - job_name: 'istio-mesh'
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              # Only scrape pods with prometheus.io annotations enabled by Istio
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                action: replace
                target_label: __address__
                regex: (.+):(?:\d+);(\d+)
                replacement: $1:$2
              # Map additional labels to make metrics more meaningful
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: kubernetes_pod_name

          - job_name: 'istiod'
            kubernetes_sd_configs:
              - role: endpoints
                namespaces:
                  names:
                    - istio-system
            relabel_configs:
              - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
                action: keep
                regex: istiod;http-monitoring
              # Add labels to identify namespace and pod
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: kubernetes_pod_name

  processors:
    resource/env:
      attributes:
      - key: deployment.environment
        value: Staging
        action: upsert
      - key: cluster
        value: docker-desktop
        action: upsert

  exporters:
    otlp:
      endpoint: "https://ingest.{region-code }.signoz.cloud:443" # replace {region} with your region if you are using signoz cloud, otherwise use localhost:4317 or wherever your collector is running
      headers:
        signoz-access-token: "<signoz-token>" # Obtain from https://{your-signoz-url}/settings/ingestion-settings (signoz-token is only required for signoz cloud)

  service:
    pipelines:
      metrics:
        receivers: [prometheus]
        processors: [resource/env]
        exporters: [otlp]
image:
  repository: "otel/opentelemetry-collector-contrib"
